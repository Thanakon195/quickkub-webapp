{
  "name": "quickkub-payment-gateway",
  "version": "1.0.0",
  "description": "Enterprise-grade payment gateway system for multi-tenant SaaS",
  "private": true,
  "workspaces": [
    "backend",
    "frontend",
    "admin",
    "landing"
  ],
  "scripts": {
    "dev": "./scripts/dev.sh all",
    "dev:backend": "./scripts/dev.sh backend",
    "dev:frontend": "./scripts/dev.sh frontend",
    "dev:admin": "./scripts/dev.sh admin",
    "dev:landing": "./scripts/dev.sh landing",
    "build": "npm run build:backend && npm run build:frontend && npm run build:admin && npm run build:landing",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "build:admin": "cd admin && npm run build",
    "build:landing": "cd landing && npm run build",
    "start": "./scripts/deploy.sh production",
    "start:dev": "./scripts/deploy.sh development",
    "start:staging": "./scripts/deploy.sh staging",
    "stop": "cd devops && docker-compose down",
    "restart": "npm run stop && npm run start",
    "logs": "cd devops && docker-compose logs -f",
    "logs:backend": "cd devops && docker-compose logs -f backend",
    "logs:frontend": "cd devops && docker-compose logs -f frontend",
    "logs:admin": "cd devops && docker-compose logs -f admin",
    "test": "./scripts/test.sh all",
    "test:unit": "./scripts/test.sh all unit",
    "test:integration": "./scripts/test.sh integration",
    "test:performance": "./scripts/test.sh performance",
    "test:smoke": "./scripts/test.sh smoke",
    "test:backend": "./scripts/test.sh backend",
    "test:frontend": "./scripts/test.sh frontend",
    "test:admin": "./scripts/test.sh admin",
    "lint": "npm run lint:backend && npm run lint:frontend && npm run lint:admin",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:admin": "cd admin && npm run lint",
    "format": "npm run format:backend && npm run format:frontend && npm run format:admin",
    "format:backend": "cd backend && npm run format",
    "format:frontend": "cd frontend && npm run format",
    "format:admin": "cd admin && npm run format",
    "migrate": "./scripts/migrate.sh run",
    "migrate:generate": "./scripts/migrate.sh generate",
    "migrate:revert": "./scripts/migrate.sh revert",
    "migrate:reset": "./scripts/migrate.sh reset",
    "migrate:seed": "./scripts/migrate.sh seed",
    "backup": "./scripts/backup.sh all",
    "backup:list": "./scripts/backup.sh list",
    "backup:cleanup": "./scripts/backup.sh cleanup",
    "backup:restore": "./scripts/backup.sh restore-db",
    "monitor": "./scripts/monitor.sh all",
    "monitor:status": "./scripts/monitor.sh status",
    "monitor:health": "./scripts/monitor.sh health",
    "monitor:logs": "./scripts/monitor.sh logs",
    "monitor:resources": "./scripts/monitor.sh resources",
    "monitor:performance": "./scripts/monitor.sh performance",
    "security": "./scripts/security.sh all",
    "security:scan": "./scripts/security.sh scan",
    "security:report": "./scripts/security.sh report",
    "security:fix": "./scripts/security.sh fix",
    "install:all": "cd backend && npm install && cd ../frontend && npm install && cd ../admin && npm install && cd ../landing && npm install",
    "clean": "npm run clean:node_modules && npm run clean:build && npm run clean:docker",
    "clean:node_modules": "rm -rf node_modules && cd backend && rm -rf node_modules && cd ../frontend && rm -rf node_modules && cd ../admin && rm -rf node_modules && cd ../landing && rm -rf node_modules",
    "clean:build": "cd backend && rm -rf dist && cd ../frontend && rm -rf .next && cd ../admin && rm -rf build && cd ../landing && rm -rf .next",
    "clean:docker": "docker system prune -a -f && docker volume prune -f",
    "setup": "npm run install && npm run migrate:reset && npm run dev",
    "setup:production": "npm run install && npm run migrate:reset && npm run start",
    "docs": "cd docs && npm run dev",
    "docs:build": "cd docs && npm run build",
    "help": "echo 'Available commands:' && npm run | grep -E '^  [a-z]' | sort"
  },
  "keywords": [
    "payment-gateway",
    "saas",
    "fintech",
    "ecommerce",
    "api",
    "typescript",
    "nestjs",
    "nextjs",
    "react",
    "postgresql",
    "redis",
    "docker"
  ],
  "author": "QuickKub Team",
  "license": "COMMERCIAL",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/quickkub-payment-gateway.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/quickkub-payment-gateway/issues"
  },
  "homepage": "https://quickkub.com",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "devDependencies": {
    "axios": "^1.10.0",
    "chai": "^4.3.10",
    "mocha": "^10.2.0"
  }
}
